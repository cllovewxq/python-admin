# Generated by Django 4.0.3 on 2022-03-31 14:56

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Classify',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=64, primary_key=True, serialize=False)),
                ('device_type', models.CharField(choices=[('switch', '交换机')], max_length=32, unique=True, verbose_name='设备类型')),
                ('name', models.CharField(max_length=32, verbose_name='分类名称')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('remark', models.TextField(blank=True, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '模型分类',
                'verbose_name_plural': '模型分类',
            },
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=64, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=32, verbose_name='模型名称')),
                ('template_id', models.IntegerField(choices=[(10001, 'Linux by Zabbix agent'), (10047, 'Zabbix server health'), (10048, 'Zabbix proxy health'), (10050, 'Zabbix agent'), (10074, 'OpenBSD'), (10075, 'FreeBSD'), (10076, 'AIX'), (10077, 'HP-UX'), (10078, 'Solaris'), (10079, 'macOS'), (10081, 'Windows by Zabbix agent'), (10093, 'FTP Service'), (10094, 'HTTP Service'), (10095, 'HTTPS Service'), (10096, 'IMAP Service'), (10097, 'LDAP Service'), (10098, 'NNTP Service'), (10099, 'NTP Service'), (10100, 'POP Service'), (10101, 'SMTP Service'), (10102, 'SSH Service'), (10103, 'Telnet Service'), (10169, 'Generic Java JMX'), (10171, 'Intel SR1530 IPMI'), (10172, 'Intel SR1630 IPMI'), (10173, 'VMware'), (10174, 'VMware Guest'), (10175, 'VMware Hypervisor'), (10183, 'EtherLike-MIB SNMP'), (10185, 'HOST-RESOURCES-MIB SNMP'), (10186, 'ICMP Ping'), (10188, 'Interfaces Simple SNMP'), (10190, 'Interfaces SNMP'), (10192, 'Interfaces Windows SNMP'), (10207, 'Alcatel Timetra TiMOS SNMP'), (10208, 'Brocade FC SNMP'), (10209, 'Brocade_Foundry Performance SNMP'), (10210, 'Brocade_Foundry Nonstackable SNMP'), (10211, 'Brocade_Foundry Stackable SNMP'), (10212, 'Cisco CISCO-MEMORY-POOL-MIB SNMP'), (10213, 'Cisco CISCO-PROCESS-MIB SNMP'), (10215, 'Cisco OLD-CISCO-CPU-MIB SNMP'), (10216, 'Cisco Inventory SNMP'), (10217, 'Cisco CISCO-ENVMON-MIB SNMP'), (10218, 'Cisco IOS SNMP'), (10220, 'Cisco IOS prior to 12.0_3_T SNMP'), (10221, 'Dell Force S-Series SNMP'), (10222, 'D-Link DES 7200 SNMP'), (10223, 'D-Link DES_DGS Switch SNMP'), (10224, 'Extreme EXOS SNMP'), (10226, 'Network Generic Device SNMP'), (10227, 'HP Comware HH3C SNMP'), (10229, 'Huawei VRP SNMP'), (10230, 'Intel_Qlogic Infiniband SNMP'), (10231, 'Juniper SNMP'), (10233, 'Mikrotik SNMP'), (10234, 'Netgear Fastpath SNMP'), (10235, 'QTech QSW SNMP'), (10236, 'TP-LINK SNMP'), (10237, 'Ubiquiti AirOS SNMP'), (10248, 'Linux SNMP'), (10249, 'Windows SNMP'), (10250, 'HP Enterprise Switch SNMP'), (10251, 'Mellanox SNMP'), (10252, 'Cisco CISCO-PROCESS-MIB IOS versions 12.0_3_T-12.2_3.5 SNMP'), (10253, 'Cisco IOS versions 12.0_3_T-12.2_3.5 SNMP'), (10254, 'Arista SNMP'), (10255, 'Dell iDRAC SNMP'), (10256, 'HP iLO SNMP'), (10286, 'Windows CPU by Zabbix agent'), (10287, 'Windows memory by Zabbix agent'), (10258, 'IBM IMM SNMP'), (10259, 'Supermicro Aten SNMP'), (10260, 'Apache Tomcat JMX'), (10261, 'Remote Zabbix server health'), (10262, 'Remote Zabbix proxy health'), (10264, 'Apache by Zabbix agent'), (10265, 'Apache by HTTP'), (10266, 'Nginx by Zabbix agent'), (10267, 'Nginx by HTTP'), (10268, 'Linux memory SNMP'), (10269, 'Linux block devices SNMP'), (10270, 'Linux CPU SNMP'), (10271, 'Linux filesystems SNMP'), (10272, 'Linux CPU by Zabbix agent'), (10273, 'Linux filesystems by Zabbix agent'), (10274, 'Linux memory by Zabbix agent'), (10275, 'Linux block devices by Zabbix agent'), (10276, 'Linux network interfaces by Zabbix agent'), (10277, 'Linux generic by Zabbix agent'), (10285, 'Linux by Prom'), (10288, 'Windows filesystems by Zabbix agent'), (10289, 'Windows physical disks by Zabbix agent'), (10290, 'Windows generic by Zabbix agent'), (10291, 'Windows network by Zabbix agent'), (10292, 'Zabbix agent active'), (10300, 'RabbitMQ cluster by Zabbix agent'), (10301, 'RabbitMQ node by Zabbix agent'), (10302, 'RabbitMQ cluster by HTTP'), (10303, 'RabbitMQ node by HTTP'), (10304, 'Cisco UCS SNMP'), (10305, 'HOST-RESOURCES-MIB CPU SNMP'), (10306, 'HOST-RESOURCES-MIB memory SNMP'), (10307, 'HOST-RESOURCES-MIB storage SNMP'), (10308, 'HAProxy by Zabbix agent'), (10309, 'HAProxy by HTTP'), (10310, 'Redis by Zabbix agent 2'), (10314, 'Windows services by Zabbix agent'), (10347, 'Windows memory by Zabbix agent active'), (10348, 'Windows network by Zabbix agent active'), (10349, 'Windows physical disks by Zabbix agent active'), (10350, 'Windows services by Zabbix agent active'), (10316, 'MySQL by Zabbix agent'), (10317, 'MySQL by ODBC'), (10318, 'Docker by Zabbix agent 2'), (10319, 'Memcached by Zabbix agent 2'), (10320, 'MySQL by Zabbix agent 2'), (10321, 'Chassis by IPMI'), (10322, 'Elasticsearch Cluster by HTTP'), (10323, 'ClickHouse by HTTP'), (10324, 'Etcd by HTTP'), (10325, 'IIS by Zabbix agent'), (10326, 'IIS by Zabbix agent active'), (10327, 'MSSQL by ODBC'), (10328, 'Oracle by ODBC'), (10329, 'PostgreSQL by Zabbix agent 2'), (10330, 'PHP-FPM by Zabbix agent'), (10331, 'PHP-FPM by HTTP'), (10332, 'VMware macros'), (10335, 'Oracle by Zabbix agent 2'), (10336, 'Asterisk by HTTP'), (10337, 'Linux block devices by Zabbix agent active'), (10338, 'Linux CPU by Zabbix agent active'), (10339, 'Linux filesystems by Zabbix agent active'), (10340, 'Linux generic by Zabbix agent active'), (10341, 'Linux memory by Zabbix agent active'), (10342, 'Linux network interfaces by Zabbix agent active'), (10343, 'Linux by Zabbix agent active'), (10344, 'Windows CPU by Zabbix agent active'), (10345, 'Windows filesystems by Zabbix agent active'), (10346, 'Windows generic by Zabbix agent active'), (10351, 'Windows by Zabbix agent active'), (10353, 'Ceph by Zabbix agent 2'), (10355, 'Squid SNMP'), (10357, 'PostgreSQL by user parameters'), (10358, 'Apache ActiveMQ by JMX'), (10359, 'Aranet Cloud'), (10360, 'Microsoft Exchange Server 2016 by Zabbix agent'), (10361, 'Microsoft Exchange Server 2016 by Zabbix agent active'), (10362, 'GitLab by HTTP'), (10363, 'Hadoop by HTTP'), (10364, 'Apache Kafka by JMX'), (10365, 'HashiCorp Vault by HTTP'), (10366, 'VMware FQDN'), (10369, 'Zookeeper by HTTP'), (10370, 'Apache Cassandra by JMX'), (10371, 'Morningstar ProStar MPPT SNMP'), (10372, 'Morningstar ProStar PWM SNMP'), (10373, 'Morningstar SunSaver MPPT SNMP'), (10374, 'Morningstar SureSine SNMP'), (10375, 'Morningstar TriStar MPPT 600V SNMP'), (10376, 'Morningstar TriStar MPPT SNMP'), (10377, 'Morningstar TriStar PWM SNMP'), (10378, 'NetApp FAS3220 SNMP'), (10379, 'Jenkins by HTTP'), (10380, 'Hikvision camera by HTTP'), (10381, 'Ignite by JMX'), (10382, 'Microsoft SharePoint by HTTP'), (10383, 'SMART by Zabbix agent 2'), (10384, 'SMART by Zabbix agent active 2'), (10385, 'Huawei OceanStor 5300 V5 SNMP'), (10386, 'MongoDB node by Zabbix Agent 2'), (10387, 'MongoDB cluster by Zabbix Agent 2'), (10390, 'Cisco Catalyst 3750V2-24FS SNMP'), (10391, 'Cisco Catalyst 3750V2-24PS SNMP'), (10392, 'Cisco Catalyst 3750V2-24TS SNMP'), (10393, 'Cisco Catalyst 3750V2-48PS SNMP'), (10394, 'Cisco Catalyst 3750V2-48TS SNMP'), (10395, 'APC UPS SNMP'), (10396, 'NetApp AFF A700 by HTTP'), (10397, 'TiDB PD by HTTP'), (10398, 'TiDB by HTTP'), (10399, 'TiDB TiKV by HTTP'), (10400, 'APC UPS Galaxy 3500 SNMP'), (10401, 'APC Smart-UPS 2200 RM SNMP'), (10402, 'APC Smart-UPS 3000 XLM SNMP'), (10403, 'APC Smart-UPS RT 1000 RM XL SNMP'), (10404, 'APC Smart-UPS RT 1000 XL SNMP'), (10405, 'APC Smart-UPS SRT 5000 SNMP bkp'), (10406, 'APC Smart-UPS SRT 8000 SNMP'), (10407, 'APC UPS Symmetra LX SNMP'), (10408, 'APC UPS Symmetra RM SNMP'), (10409, 'APC UPS Symmetra RX SNMP'), (10410, 'WildFly Domain by JMX'), (10411, 'WildFly Server by JMX'), (10412, 'APC Smart-UPS SRT 5000 SNMP'), (10413, 'Template App Nginx Plus by HTTP'), (10414, 'ZYXEL AAM1212-51 IES-612 SNMP'), (10415, 'ZYXEL ES3500-8PD SNMP'), (10416, 'ZYXEL GS-4012F SNMP'), (10417, 'ZYXEL IES-500x SNMP'), (10418, 'ZYXEL IES-6000 SNMP'), (10419, 'ZYXEL IES1248-51 SNMP'), (10420, 'ZYXEL MES-3528 SNMP'), (10421, 'ZYXEL MES3500-10 SNMP'), (10422, 'ZYXEL MES3500-24 SNMP'), (10423, 'ZYXEL MGS-3712 SNMP'), (10424, 'ZYXEL MGS-3712F SNMP'), (10425, 'ZYXEL MES3500-24S SNMP'), (10426, 'ZYXEL MGS3520-28x SNMP'), (10427, 'ZYXEL XGS-4728F SNMP'), (10428, 'Cisco UCS Manager SNMP'), (10429, 'HPE ProLiant BL460 SNMP'), (10430, 'HPE ProLiant BL920 SNMP'), (10431, 'HPE ProLiant DL360 SNMP'), (10432, 'HPE ProLiant DL380 SNMP'), (10433, 'DELL PowerEdge R720 by HTTP'), (10434, 'DELL PowerEdge R720 SNMP'), (10435, 'DELL PowerEdge R740 by HTTP'), (10436, 'DELL PowerEdge R740 SNMP'), (10437, 'DELL PowerEdge R820 by HTTP'), (10438, 'DELL PowerEdge R820 SNMP'), (10439, 'DELL PowerEdge R840 by HTTP'), (10440, 'DELL PowerEdge R840 SNMP'), (10441, 'Systemd by Zabbix agent 2'), (10442, 'GridGain by JMX'), (10443, 'F5 Big-IP SNMP'), (10449, '1496780939710132224'), (10450, '1496781364802842624'), (10451, '1496781436764516352'), (10452, '1496781492896886784'), (10453, '1496781541118799872'), (10456, '1497039049464967168'), (10460, '1497086927533207552'), (10464, '1499580446730489856'), (10465, '1499580484214984704'), (10472, 'Check and repair Zabbix API token'), (10204, '通用SNMP 模板')], verbose_name='模板ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('remark', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('classify', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='model.classify', verbose_name='所属模型分类')),
            ],
            options={
                'verbose_name': '模型',
                'verbose_name_plural': '模型',
            },
        ),
    ]
